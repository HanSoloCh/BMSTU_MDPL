#include <iostream>

void neon_sub(const int *a, const int *b, int *c, int n) {
  int i = 0;
  for (i = 0; i < (n / 4) * 4; i += 4)
  {
    asm volatile(
        "ld1 {v0.4s}, [%[a]]\n"     // Загружаем 4 целых числа из массива `a` в векторный регистр `v0`
        "ld1 {v1.4s}, [%[b]]\n"     // Загружаем 4 целых числа из массива `b` в векторный регистр `v1`
        "sub v2.4s, v0.4s, v1.4s\n" // Складываем соответствующие элементы векторов `v0` и `v1`, результат в `v2`
        "st1 {v2.4s}, [%[c]]\n"     // Сохраняем результат из векторного регистра `v2` в массив `c`
        :
        : [a] "r" (&a[i]), [b] "r" (&b[i]), [c] "r" (&c[i])
        : "v0", "v1", "v2"
    );
  }

  for (; i < n; i++)
  {
    asm volatile(
        "ldr w0, [%[a]]\n"          // Загружаем одно целое число из массива `a` в регистр `w0`
        "ldr w1, [%[b]]\n"          // Загружаем одно целое число из массива `b` в регистр `w1`
        "sub w2, w0, w1\n"          // Складываем числа в регистрах `w0` и `w1`, результат в `w2`
        "str w2, [%[c]]\n"          // Сохраняем результат из регистра `w2` в массив `c`
        :
        : [a] "r" (&a[i]), [b] "r" (&b[i]), [c] "r" (&c[i])
        : "w0", "w1", "w2"
    );
  }
}

int main() {
	int a[] = { 1, 2, 3 };
	int b[] = { 3, 2, 1 };
	int res[3];
	neon_sub(a, b, res, 3);
	for (int i = 0; i < 3; ++i) {
		std::cout << res[i] << " ";
	}
}
